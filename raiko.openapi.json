{"openapi":"3.0.3","info":{"title":"Raiko Proverd Server API","description":"Raiko Proverd Server API","contact":{"name":"API Support","url":"https://community.taiko.xyz","email":"info@taiko.xyz"},"license":{"name":"MIT","url":"https://github.com/taikoxyz/raiko/blob/taiko/unstable/LICENSE"},"version":"1.0"},"paths":{"/health":{"get":{"tags":["Health"],"summary":"Health check","description":"Currently only responds with an OK status.\nWill return more detailed status information soon.","operationId":"health_handler","responses":{"200":{"description":"Proverd server is healthy"}}}},"/metrics":{"get":{"tags":["Metrics"],"summary":"Get prometheus metrics","description":"Currently available metrics are:\n- concurrent_requests - the number of proof requests currently being served\n- host_request_count - the number of requests sent to this machine in total\n- host_error_count - the number of requests failed outside of guest execution\n- guest_proof_request_count - the number of requests sent to this guest\n- guest_proof_success_count - the number of successful proofs generated by this guest\n- guest_proof_error_count - the number of failed proofs generated by this guest\n- guest_proof_time_histogram - time taken for proof generation by this guest\n- prepare_input_time_histogram - time taken for prepare input\n- total_time_histogram - time taken for the whole proof request\n- process_cpu_seconds_total - total user and system CPU time spent in seconds\n- process_open_fds - number of open file descriptors\n- process_max_fds - maximum number of open file descriptors\n- process_virtual_memory_bytes - virtual memory size in bytes\n- process_resident_memory_bytes - resident memory size in bytes\n- process_start_time_seconds - start time of the process since unix epoch in seconds\n- process_threads - number of threads","operationId":"metrics_handler","responses":{"200":{"description":"The metrics have been captured successfuly"}}}},"/proof":{"post":{"tags":["Proving"],"summary":"Generate a proof for requested config.","description":"Accepts a proof request and generates a proof with the specified guest prover.\nThe guest provers currently available are:\n- native - constructs a block and checks for equality\n- sgx - uses the sgx environment to construct a block and produce proof of execution\n- sp1 - uses the sp1 prover\n- risc0 - uses the risc0 prover","operationId":"proof_handler","requestBody":{"description":"","content":{"application/json":{"schema":{}}},"required":true},"responses":{"200":{"description":"Successfully created proof for request"}}}}},"components":{"schemas":{"HostError":{"oneOf":[{"type":"object","required":["InvalidProofType"],"properties":{"InvalidProofType":{"type":"string","description":"For invalid proof type generation request."}}},{"type":"object","required":["InvalidRequestConfig"],"properties":{"InvalidRequestConfig":{"type":"string","description":"For invalid proof request configuration."}}},{"type":"object","required":["InvalidAddress"],"properties":{"InvalidAddress":{"type":"string","description":"For invalid address."}}},{"type":"object","required":["Io"],"properties":{"Io":{"description":"For I/O errors."}}},{"type":"object","required":["Serde"],"properties":{"Serde":{"description":"For Serde errors."}}},{"type":"object","required":["JoinHandle"],"properties":{"JoinHandle":{"description":"For errors related to the tokio runtime."}}},{"type":"object","required":["GuestError"],"properties":{"GuestError":{"description":"For errors produced by the guest provers."}}},{"type":"object","required":["FeatureNotSupportedError"],"properties":{"FeatureNotSupportedError":{"description":"For requesting a proof of a type that is not supported."}}},{"type":"object","required":["Anyhow"],"properties":{"Anyhow":{"description":"A catch-all error for any other error type."}}}],"description":"The standardized error returned by the Raiko host."},"ProofRequestOpt":{"type":"object","description":"A partial proof request config.","properties":{"beacon_rpc":{"type":"string","description":"The beacon node URL for retrieving data blobs.","default":null,"nullable":true},"block_number":{"type":"integer","format":"int64","description":"The block number for the block to generate a proof for.","default":null,"nullable":true,"minimum":0},"graffiti":{"type":"string","default":null,"nullable":true},"l1_network":{"type":"string","description":"The L1 network to generate the proof for.","default":null,"nullable":true},"l1_rpc":{"type":"string","description":"The L1 node URL for signal root verify and get txlist info from proposed\ntransaction.","default":null,"nullable":true},"network":{"type":"string","description":"The network to generate the proof for.","default":null,"nullable":true},"proof_type":{"type":"string","description":"The proof type.","default":null,"nullable":true},"prover":{"type":"string","description":"The protocol instance data.","default":null,"nullable":true},"prover_args":{"allOf":[{"$ref":"#/components/schemas/ProverSpecificOpts"}],"default":{"native":null,"risc0":null,"sgx":null,"sp1":null}},"rpc":{"type":"string","description":"RPC URL for retrieving block by block number.","default":null,"nullable":true}}}}},"tags":[{"name":"Prooving","description":"Routes that handle prooving requests"},{"name":"Health","description":"Routes that report the server health status"},{"name":"Metrics","description":"Routes that give detailed insight into the server"}]}
